pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "latest" // Update this to your desired Docker image name
        DOCKER_REGISTRY = "hnaeeab" // Update this to your Docker Hub username
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout your source code repository
                git 'https://github.com/haneeab/BetterMath.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image
                    sh "docker build -t ${DOCKER_IMAGE} ."
                }
            }
        }


        stage('Push Docker Image') {
            steps {
                script {
                    // Log in to Docker Hub
                    sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'

                    // Tag the Docker image
                    sh 'docker tag $DOCKER_IMAGE $DOCKER_REGISTRY/$DOCKER_IMAGE:latest'

                    // Push the Docker image to Docker Hub
                    sh 'docker push $DOCKER_REGISTRY/$DOCKER_IMAGE:latest'
                }
            }
        }
        stage('Run Tests') {
                    steps {
                        script {
                            // Run Django tests inside the Docker container
                            sh 'docker run --rm $DOCKER_IMAGE python manage.py test'
                    }
                }
            }

        stage('Deploy') {
            steps {
                script {
                    // Deploy the Docker image (e.g., using Docker Compose, Kubernetes, etc.)
                    // This example assumes Docker Compose is used for deployment
                    sh 'docker-compose down'
                    sh 'docker-compose up -d'
                }
            }
        }
    }

    post {
        always {
            // Clean up Docker images and containers after the build
            script {
                sh 'docker system prune -af'
            }
        }
        success {
            echo 'Build and deployment successful!'
        }
        failure {
            echo 'Build or deployment failed!'
        }
    }
}
